// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/errorhandling.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ErrorhandlingService {

  /// <summary>Holder for reflection information generated from Protos/errorhandling.proto</summary>
  public static partial class ErrorhandlingReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/errorhandling.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ErrorhandlingReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpQcm90b3MvZXJyb3JoYW5kbGluZy5wcm90bxIbZXJyb3JoYW5kbGluZ3Nl",
            "cnZpY2UucHJvdG9zGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3Rv",
            "IrYBChdHZXRXYXJuaW5nUmVwb3J0UmVxdWVzdBISCgpyZXF1ZXN0X2lkGAEg",
            "ASgDEi0KCXRpbWVzdGFtcBgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1l",
            "c3RhbXASEgoKbWlzc2lvbl9pZBgDIAEoCRIPCgd0YXNrX2lkGAQgASgJEhEK",
            "CWRldmljZV9pZBgFIAEoCRIPCgdmaXJtX2lkGAYgASgJEg8KB3ZlcnNpb24Y",
            "ByABKAkiwgEKGEdldFdhcm5pbmdSZXBvcnRSZXNwb25zZRISCgpyZXF1ZXN0",
            "X2lkGAEgASgDEi0KCXRpbWVzdGFtcBgCIAEoCzIaLmdvb2dsZS5wcm90b2J1",
            "Zi5UaW1lc3RhbXASEgoKbWlzc2lvbl9pZBgDIAEoCRIPCgd0YXNrX2lkGAQg",
            "ASgJEhEKCWRldmljZV9pZBgFIAEoCRISCgplcnJvcl9jb2RlGAYgASgFEhcK",
            "D3dhcm5pbmdfY29udGVudBgHIAEoCTKDAQoNV2FybmluZ1JlcG9ydBJyCgNH",
            "ZXQSNC5lcnJvcmhhbmRsaW5nc2VydmljZS5wcm90b3MuR2V0V2FybmluZ1Jl",
            "cG9ydFJlcXVlc3QaNS5lcnJvcmhhbmRsaW5nc2VydmljZS5wcm90b3MuR2V0",
            "V2FybmluZ1JlcG9ydFJlc3BvbnNlQheqAhRFcnJvcmhhbmRsaW5nU2Vydmlj",
            "ZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ErrorhandlingService.GetWarningReportRequest), global::ErrorhandlingService.GetWarningReportRequest.Parser, new[]{ "RequestId", "Timestamp", "MissionId", "TaskId", "DeviceId", "FirmId", "Version" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ErrorhandlingService.GetWarningReportResponse), global::ErrorhandlingService.GetWarningReportResponse.Parser, new[]{ "RequestId", "Timestamp", "MissionId", "TaskId", "DeviceId", "ErrorCode", "WarningContent" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GetWarningReportRequest : pb::IMessage<GetWarningReportRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetWarningReportRequest> _parser = new pb::MessageParser<GetWarningReportRequest>(() => new GetWarningReportRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetWarningReportRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ErrorhandlingService.ErrorhandlingReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWarningReportRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWarningReportRequest(GetWarningReportRequest other) : this() {
      requestId_ = other.requestId_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      missionId_ = other.missionId_;
      taskId_ = other.taskId_;
      deviceId_ = other.deviceId_;
      firmId_ = other.firmId_;
      version_ = other.version_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWarningReportRequest Clone() {
      return new GetWarningReportRequest(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private long requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "mission_id" field.</summary>
    public const int MissionIdFieldNumber = 3;
    private string missionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MissionId {
      get { return missionId_; }
      set {
        missionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "task_id" field.</summary>
    public const int TaskIdFieldNumber = 4;
    private string taskId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskId {
      get { return taskId_; }
      set {
        taskId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "device_id" field.</summary>
    public const int DeviceIdFieldNumber = 5;
    private string deviceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "firm_id" field.</summary>
    public const int FirmIdFieldNumber = 6;
    private string firmId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirmId {
      get { return firmId_; }
      set {
        firmId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 7;
    private string version_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetWarningReportRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetWarningReportRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if (MissionId != other.MissionId) return false;
      if (TaskId != other.TaskId) return false;
      if (DeviceId != other.DeviceId) return false;
      if (FirmId != other.FirmId) return false;
      if (Version != other.Version) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestId != 0L) hash ^= RequestId.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (MissionId.Length != 0) hash ^= MissionId.GetHashCode();
      if (TaskId.Length != 0) hash ^= TaskId.GetHashCode();
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (FirmId.Length != 0) hash ^= FirmId.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RequestId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(RequestId);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Timestamp);
      }
      if (MissionId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MissionId);
      }
      if (TaskId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TaskId);
      }
      if (DeviceId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DeviceId);
      }
      if (FirmId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(FirmId);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RequestId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(RequestId);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Timestamp);
      }
      if (MissionId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MissionId);
      }
      if (TaskId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TaskId);
      }
      if (DeviceId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DeviceId);
      }
      if (FirmId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(FirmId);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RequestId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RequestId);
      }
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (MissionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MissionId);
      }
      if (TaskId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskId);
      }
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
      }
      if (FirmId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirmId);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetWarningReportRequest other) {
      if (other == null) {
        return;
      }
      if (other.RequestId != 0L) {
        RequestId = other.RequestId;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      if (other.MissionId.Length != 0) {
        MissionId = other.MissionId;
      }
      if (other.TaskId.Length != 0) {
        TaskId = other.TaskId;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      if (other.FirmId.Length != 0) {
        FirmId = other.FirmId;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadInt64();
            break;
          }
          case 18: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 26: {
            MissionId = input.ReadString();
            break;
          }
          case 34: {
            TaskId = input.ReadString();
            break;
          }
          case 42: {
            DeviceId = input.ReadString();
            break;
          }
          case 50: {
            FirmId = input.ReadString();
            break;
          }
          case 58: {
            Version = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RequestId = input.ReadInt64();
            break;
          }
          case 18: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 26: {
            MissionId = input.ReadString();
            break;
          }
          case 34: {
            TaskId = input.ReadString();
            break;
          }
          case 42: {
            DeviceId = input.ReadString();
            break;
          }
          case 50: {
            FirmId = input.ReadString();
            break;
          }
          case 58: {
            Version = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetWarningReportResponse : pb::IMessage<GetWarningReportResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetWarningReportResponse> _parser = new pb::MessageParser<GetWarningReportResponse>(() => new GetWarningReportResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetWarningReportResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ErrorhandlingService.ErrorhandlingReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWarningReportResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWarningReportResponse(GetWarningReportResponse other) : this() {
      requestId_ = other.requestId_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      missionId_ = other.missionId_;
      taskId_ = other.taskId_;
      deviceId_ = other.deviceId_;
      errorCode_ = other.errorCode_;
      warningContent_ = other.warningContent_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWarningReportResponse Clone() {
      return new GetWarningReportResponse(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private long requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "mission_id" field.</summary>
    public const int MissionIdFieldNumber = 3;
    private string missionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MissionId {
      get { return missionId_; }
      set {
        missionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "task_id" field.</summary>
    public const int TaskIdFieldNumber = 4;
    private string taskId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskId {
      get { return taskId_; }
      set {
        taskId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "device_id" field.</summary>
    public const int DeviceIdFieldNumber = 5;
    private string deviceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "error_code" field.</summary>
    public const int ErrorCodeFieldNumber = 6;
    private int errorCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    /// <summary>Field number for the "warning_content" field.</summary>
    public const int WarningContentFieldNumber = 7;
    private string warningContent_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WarningContent {
      get { return warningContent_; }
      set {
        warningContent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetWarningReportResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetWarningReportResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if (MissionId != other.MissionId) return false;
      if (TaskId != other.TaskId) return false;
      if (DeviceId != other.DeviceId) return false;
      if (ErrorCode != other.ErrorCode) return false;
      if (WarningContent != other.WarningContent) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestId != 0L) hash ^= RequestId.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (MissionId.Length != 0) hash ^= MissionId.GetHashCode();
      if (TaskId.Length != 0) hash ^= TaskId.GetHashCode();
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (ErrorCode != 0) hash ^= ErrorCode.GetHashCode();
      if (WarningContent.Length != 0) hash ^= WarningContent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RequestId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(RequestId);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Timestamp);
      }
      if (MissionId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MissionId);
      }
      if (TaskId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TaskId);
      }
      if (DeviceId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DeviceId);
      }
      if (ErrorCode != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ErrorCode);
      }
      if (WarningContent.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(WarningContent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RequestId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(RequestId);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Timestamp);
      }
      if (MissionId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MissionId);
      }
      if (TaskId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TaskId);
      }
      if (DeviceId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DeviceId);
      }
      if (ErrorCode != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ErrorCode);
      }
      if (WarningContent.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(WarningContent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RequestId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RequestId);
      }
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (MissionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MissionId);
      }
      if (TaskId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskId);
      }
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
      }
      if (ErrorCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrorCode);
      }
      if (WarningContent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WarningContent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetWarningReportResponse other) {
      if (other == null) {
        return;
      }
      if (other.RequestId != 0L) {
        RequestId = other.RequestId;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      if (other.MissionId.Length != 0) {
        MissionId = other.MissionId;
      }
      if (other.TaskId.Length != 0) {
        TaskId = other.TaskId;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      if (other.ErrorCode != 0) {
        ErrorCode = other.ErrorCode;
      }
      if (other.WarningContent.Length != 0) {
        WarningContent = other.WarningContent;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadInt64();
            break;
          }
          case 18: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 26: {
            MissionId = input.ReadString();
            break;
          }
          case 34: {
            TaskId = input.ReadString();
            break;
          }
          case 42: {
            DeviceId = input.ReadString();
            break;
          }
          case 48: {
            ErrorCode = input.ReadInt32();
            break;
          }
          case 58: {
            WarningContent = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RequestId = input.ReadInt64();
            break;
          }
          case 18: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 26: {
            MissionId = input.ReadString();
            break;
          }
          case 34: {
            TaskId = input.ReadString();
            break;
          }
          case 42: {
            DeviceId = input.ReadString();
            break;
          }
          case 48: {
            ErrorCode = input.ReadInt32();
            break;
          }
          case 58: {
            WarningContent = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
